# client.py
import asyncio

import aioconsole
import requests
import time
import json

SERVER_URL = "https://nezumi403.pythonanywhere.com"

def a_origin_els(a, b):
    res = []
    for i in range(len(a)):
        if a[i] not in b:
            res.append(a[i])
    return res

async def send_message():
    while True:
        message = await aioconsole.ainput("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
        if message.lower() == 'exit':
            break
        try:
            await aioconsole.aprint(f"üîÑ –ü—ã—Ç–∞—é—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: '{message}'")
            response = requests.post(f"{SERVER_URL}/send",
                                     json={'msg': '[' + str(time.strftime("%H:%M:%S")) + ']  ' + message},
                                     timeout=5)
            await aioconsole.aprint(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –°—Ç–∞—Ç—É—Å: {response.status_code}")
            await aioconsole.aprint("‚úì –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä")
        except requests.exceptions.Timeout:
            await aioconsole.aprint("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ")
        except requests.exceptions.ConnectionError:
            await aioconsole.aprint("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ")
        except Exception as e:
            await aioconsole.aprint(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")


async def receive_message():
    MESSAGES = []
    while True:
        time.sleep(3)
        try:
            await aioconsole.aprint("\nüîÑ –ü—Ä–æ–≤–µ—Ä—è—é –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...\n")
            response = requests.get(f"{SERVER_URL}/receive", timeout=5)
            #await aioconsole.aprint(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç. –°—Ç–∞—Ç—É—Å: {response.status_code}")
            data = response.json()


            if data['msg'] != MESSAGES and data['msg']:
                new_mess = a_origin_els(data['msg'], MESSAGES)
                #await aioconsole.aprint(f"üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {new_mess}")
                for ms in new_mess:
                    await aioconsole.aprint(f"üì®: {ms}\n")
                MESSAGES = data['msg']
            #return data.get('msg')
            """received = data.get('msg')
            if received:
                await aioconsole.aprint(f"üë§ –ü–æ–ª—É—á–µ–Ω–æ: {received}")"""
        except requests.exceptions.Timeout:
            await aioconsole.aprint("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏")
        except requests.exceptions.ConnectionError:
            await aioconsole.aprint("‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏")
        except Exception as e:
            await aioconsole.aprint(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {e}")


def test_connection():
    """–¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º"""
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º...")
        response = requests.get(f"{SERVER_URL}/receive", timeout=10)
        print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç! –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response.text}")
        return True
    except Exception as e:
        print(f"‚ùå –ù–µ –º–æ–≥—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("1. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ URL?")
        print("2. –ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –≤–µ–±-—Å–∞–π—Ç –Ω–∞ PythonAnywhere?")
        print("3. –ï—Å—Ç—å –ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ?")
        return False

async def main():
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    if not test_connection():
        print("–ü—Ä–µ—Ä—ã–≤–∞—é —Ä–∞–±–æ—Ç—É...")
        exit()

    print("\nüí¨ –ß–∞—Ç –∑–∞–ø—É—â–µ–Ω! –í–≤–æ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
    await asyncio.gather(
        receive_message(),
        send_message(),
    )

if __name__ == '__main__':
    asyncio.run(main())